syntax = "proto3";  // The price sdfgfhg API request message //asd /*asdfghj*/ AS

package yxchfz.dalao.api;  // The price availabil

option java_package = "net.yxchfz.schema.api";  // Chronological work  legs
option java_outer_classname = "Demo Proto";     // Chronological work  legs
option java_multiple_files = true;              // Chronological work  legss

import "yixiaocuohuaifenzi/democontract/common/client.proto";   // currency must be the same as
import "yixiaocuohuaifenzi/democontract/common/pass.proto";     // Chronological work  legs
import "yixiaocuohuaifenzi/democontract/common/dasdasd.proto";  // asdfgh
import "yixiaocuohuaifenzi/democontract/common/ewegrhf.proto";  // sdsads

message DemoRequestA {
  common.RequestContext request_context = 1;         // Basic request context data
  repeated common.WorkerGroup passenger_groups = 2;  // Worker groups
  repeated common.Tiger work_legs = 3;               // Chronological work  legs
  common.Money quote_price = 4;                      // Use to validate the work  price, the currency must be the same as
}

message DemoRequestB {
  common.RequestContext request_context = 1;         // Basic request context data
  repeated common.WorkerGroup passenger_groups = 2;  // Worker groups
  repeated common.Tiger work_legs = 3;               // Chronological work  legs
  common.Money quote_price = 4;                      // Use to validate the work  price, the currency must be the same as
  map<string, Project> projects = 3;                 // map field comment d
  common.Money quote_pasdasrice = 5;                 // Use to validate the work  price
}

enum BaggageType {
  BAGGAGE_TYPE_UNSPECIFIED = 0;  // BAGGAGE_TYPE_UNSPECIFIED
  BAGGAGE_TYPE_CARRY_ON = 1;     // BAGGAGE_TYPE_CARRY_ON
  BAGGAGE_TYPE_CHECKED = 2;      // BAGGAGE_TYPE_CHECKED
}

message DemoRequestC {
  common.RequestContext request_context = 1;         // Basic request context data
  repeated common.WorkerGroup passenger_groups = 2;  // Worker groups
  repeated common.Tiger work_legs = 3;               // Chronological work  legs
  common.Money quote_price = 4;                      // Use to validate the work  price, the currency must be the same as
  common.Money quote_pasdasrice = 4;                 // Use to validate the work  price
}

service Demo {
  rpc DemoA (DemoRequest) returns (DemoResponse);  // sadfdDemo
  rpc DemoB (DemoRequest) returns (DemoResponse);  // Demo
}
